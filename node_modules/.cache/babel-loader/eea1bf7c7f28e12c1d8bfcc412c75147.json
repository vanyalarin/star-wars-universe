{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\vania\\\\Desktop\\\\JS\\\\React\\\\star-wars-universe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Planets from \"./planets/planets\";\nimport ReactPaginate from \"react-paginate\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PlanetDetail from \"./planetDetail/planetDetail\";\n\nfunction App() {\n  _s();\n\n  const [pageCount, setPageCount] = useState(1);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentPage, setcurrentPage] = useState(1);\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetch(`https://swapi.dev/api/planets/?page=${currentPage}`).then(res => res.json()).then(result => {\n      setPageCount(result.count / 10);\n      console.log(result);\n      setIsLoaded(true);\n      setItems(result.results);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, [currentPage]);\n\n  const handlePageChange = selectedObject => {\n    setcurrentPage(selectedObject.selected + 1);\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Star Wars Universe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: items.map((elem, index) => /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/planets/:name\",\n          children: [/*#__PURE__*/_jsxDEV(PlanetDetail, { ...items\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Planets, {\n        items: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), isLoaded ? /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        pageCount: pageCount,\n        pageRange: 2,\n        marginPagesDisplayed: 2,\n        onPageChange: handlePageChange //\n        ,\n        containerClassName: \"container\",\n        previousLinkClassName: \"page\",\n        breakClassName: \"page\",\n        nextLinkClassName: \"page\",\n        pageClassName: \"page\",\n        disabledClassNae: \"disabled\",\n        activeClassName: \"active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Nothing to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"Wf++sx14mVyGHRCOarbeqcDuKl4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vania/Desktop/JS/React/star-wars-universe/src/App.js"],"names":["React","useState","useEffect","Planets","ReactPaginate","Route","Switch","PlanetDetail","App","pageCount","setPageCount","isLoaded","setIsLoaded","error","setError","currentPage","setcurrentPage","items","setItems","fetch","then","res","json","result","count","console","log","results","handlePageChange","selectedObject","selected","message","map","elem","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Planets from \"./planets/planets\";\nimport ReactPaginate from \"react-paginate\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PlanetDetail from \"./planetDetail/planetDetail\";\n\nfunction App() {\n  const [pageCount, setPageCount] = useState(1);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(null);\n  const [currentPage, setcurrentPage] = useState(1);\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    fetch(`https://swapi.dev/api/planets/?page=${currentPage}`)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setPageCount(result.count / 10);\n          console.log(result);\n          setIsLoaded(true);\n          setItems(result.results);\n        },\n\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, [currentPage]);\n\n  const handlePageChange = (selectedObject) => {\n    setcurrentPage(selectedObject.selected + 1);\n  };\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <div className=\"App\">\n        <h1>Star Wars Universe</h1>\n        <Switch>\n          {items.map((elem, index) => (\n            <Route path=\"/planets/:name\">\n              <PlanetDetail {...items} />{\" \"}\n            </Route>\n          ))}\n        </Switch>\n\n        <Planets items={items} />\n        {isLoaded ? (\n          <ReactPaginate\n            pageCount={pageCount}\n            pageRange={2}\n            marginPagesDisplayed={2}\n            onPageChange={handlePageChange} //\n            containerClassName={\"container\"}\n            previousLinkClassName={\"page\"}\n            breakClassName={\"page\"}\n            nextLinkClassName={\"page\"}\n            pageClassName={\"page\"}\n            disabledClassNae={\"disabled\"}\n            activeClassName={\"active\"}\n          />\n        ) : (\n          <div>Nothing to display</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}